{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Inventory.js","sample-fishes.js","components/Fish.js","base.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","target","updateFish","index","onChange","deleteFish","Inventory","loadSampleFishes","fish1","fish2","fish3","Fish","details","src","alt","disabled","addToOrder","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","App","state","Date","now","setState","sampleFishes","params","match","localStorageRef","localStorage","getItem","storeid","JSON","parse","console","log","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.6418f4b3.chunk.js","sourcesContent":["export function formatPrice(cents) {\n    return (cents / 100).toLocaleString(\"en-CA\", {\n        style: \"currency\",\n        currency: \"CAD\"\n    });\n}\n\nexport function rando(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n    return text\n        .toString()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w-]+/g, \"\")\n        .replace(/--+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n    const adjectives = [\n        \"adorable\",\n        \"beautiful\",\n        \"clean\",\n        \"drab\",\n        \"elegant\",\n        \"fancy\",\n        \"glamorous\",\n        \"handsome\",\n        \"long\",\n        \"magnificent\",\n        \"old-fashioned\",\n        \"plain\",\n        \"quaint\",\n        \"sparkling\",\n        \"ugliest\",\n        \"unsightly\",\n        \"angry\",\n        \"bewildered\",\n        \"clumsy\",\n        \"defeated\",\n        \"embarassed\",\n        \"repulsive\",\n        \"scary\",\n        \"thoughtless\",\n        \"uptight\",\n        \"worried\"\n    ];\n\n    const nouns = [\n        \"women\",\n        \"men\",\n        \"children\",\n        \"teeth\",\n        \"feet\",\n        \"people\",\n        \"leaves\",\n        \"mice\",\n        \"geese\",\n        \"halves\",\n        \"knives\",\n        \"wives\",\n        \"lives\",\n        \"eleves\",\n        \"loaves\",\n        \"potatoes\",\n        \"tomatoes\",\n        \"cacti\",\n        \"foci\",\n        \"fungi\",\n        \"nuclei\",\n        \"syllabuses\",\n        \"analyses\",\n        \"diagnoses\",\n        \"oases\",\n        \"theses\",\n        \"crises\",\n        \"phenomena\",\n        \"criteria\",\n        \"data\"\n    ];\n\n    return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}","import React, { Fragment } from 'react';\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n\n    goToStore = (event) => {\n        event.preventDefault();\n        const storeName = this.myInput.current.value;\n        this.props.history.push(`/store/${storeName}`);\n    };\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                { /* comment */ }\n                <h2>Please Enter A Store</h2>\n                <input type=\"text\" ref={this.myInput} required placeholder=\"Store Name\" defaultValue={getFunName()} />\n                <button type=\"submit\">Visit Store &#8594;</button> \n            </form>\n        )\n    }\n}\n\nexport default StorePicker;","import React from \"react\";\n\nconst Header = (props) => (\n    <header className=\"top\">\n        <h1>\n            Catch \n            <span className=\"ofThe\">\n                <span className=\"of\">Of</span>\n                <span className=\"the\">The</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nexport default Header;","import React from \"react\";\nimport { formatPrice } from '../helpers';\n\nclass Order extends  React.Component {\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status == 'available';\n\n        if (!fish) return null;\n\n        if(!isAvailable) {\n            return <li key={key}>\n                Sorry {fish ? fish.name : 'fish'} is no longer available\n            </li>\n        }\n        return (\n            <li key={key}>\n                {count} lbs {fish.name}\n                {formatPrice(count * fish.price)}\n                <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n            </li>\n        );\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status == 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <ul className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </ul>\n                <div className=\"total\">\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;","import React from \"react\";\n\nclass AddFishForm extends  React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    createFish = (event) => {\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        }\n        this.props.addFish(fish);\n        event.currentTarget.reset();\n    };\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;","import React from 'react';\n\nclass EditFishForm extends React.Component {\n    handleChange = (event) => {\n        const updatedFish = { \n            ...this.props.fish, \n            [event.target.name]: event.target.value\n        }\n        this.props.updateFish(this.props.index, updatedFish);\n\n    }\n    render() {\n        return <div className=\"fish-edit\">\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\n            <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n            <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n                <option value=\"available\">Fresh!</option>\n                <option value=\"unavailable\">Sold Out!</option>\n            </select>\n            <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc}></textarea>\n            <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\n            <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n        </div>\n    }\n}\n\nexport default EditFishForm;","import React from \"react\";\nimport AddFishForm from \"./AddFishForm\"\nimport EditFishForm from \"./EditFishForm\";\n\nclass Inventory extends  React.Component {\n    render() {\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFishForm \n                        key={key} \n                        index={key}  \n                        fish={this.props.fishes[key]} \n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","const fishes = {\n    fish1: {\n        name: \"Pacific Halibut\",\n        image: \"/images/hali.jpg\",\n        desc: \"Everyone's favourite white fish. We will cut it to the size you need and ship it.\",\n        price: 1724,\n        status: \"available\"\n    },\n\n    fish2: {\n        name: \"Lobster\",\n        image: \"/images/lobster.jpg\",\n        desc: \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n        price: 3200,\n        status: \"available\"\n    },\n\n    fish3: {\n        name: \"Sea Scallops\",\n        image: \"/images/scallops.jpg\",\n        desc: \"Big, sweet and tender. True dru-pack scallops from the icey waters of Alaska.\",\n        price: 1221,\n        status: \"unavailable\"\n    },\n};\n\nexport default fishes;","import React from \"react\";\nimport {formatPrice } from \"../helpers\";\n\nclass Fish extends  React.Component {\n    render() {\n        const { name, image, desc, price, status } = this.props.details;      \n        const isAvailable = status === 'available';\n        \n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={image} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\" >{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>{isAvailable ? 'Add To Order' : 'Sold Out'}</button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCYUCs9YhmNfsa7fPlJY71L7TShYsLQZkQ\",\n    authDomain: \"catch-of-the-day-kt-574f3.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-kt-574f3-default-rtdb.firebaseio.com\",\n    //projectId: \"catch-of-the-day-kt-574f3\",\n    //storageBucket: \"catch-of-the-day-kt-574f3.appspot.com\",\n    //messagingSenderId: \"248748033690\",\n    //appId: \"1:248748033690:web:6184170449d189ff91c123\",\n    //measurementId: \"G-JGE6BB12HG\"\n  }\n);\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\n\nexport default base;","import React from 'react';\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from \"../base\";\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    }\n    componentDidMount(){\n        const { params } = this.props.match;\n        const localStorageRef = localStorage.getItem(params.storeid);\n        if(localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) })\n        }\n        console.log(localStorage);\n        this.ref = base.syncState(`${params.storeid}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeid, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n    addFish = (fish) => {\n        //take a copy of the existing  state\n        const fishes = { ...this.state.fishes };\n        //add our own new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        //set the new fishes object to state\n        this.setState({\n            fishes\n        });\n    }\n    updateFish = (key, updatedFish) => {\n        const fishes = { ...this.state.fishes };\n        fishes[key] = updatedFish;\n        this.setState({ fishes });\n    }\n\n    deleteFish = (key) => {\n        const fishes = { ...this.state.fishes };\n        fishes[key] = null;\n        this.setState({ fishes });        \n    }\n    loadSampleFishes = () => {\n        this.setState({ \n            fishes: sampleFishes\n         });\n    }\n    addToOrder = (key) => {\n        const order = { ...this.state.order };\n        order[key] = order[key] + 1 || 1;\n        this.setState({ order })\n    }\n    removeFromOrder = (key) => {\n        const order = { ...this.state.order };\n        delete order[key];\n        this.setState({ order })\n    }\n\n    \n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>  \n                    <u className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => \n                            <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />\n                        )}\n                    </u>\n                </div>\n                <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder} />\n                <Inventory addFish={this.addFish} updateFish={this.updateFish} deleteFish={this.deleteFish} loadSampleFishes={this.loadSampleFishes} fishes={this.state.fishes} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found?!!!</h2>\n    </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={ StorePicker } />\n            <Route path=\"/store/:storeid\" component={ App } />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router'\nimport './css/style.css';\n\n\nrender(<Router />, document.querySelector('#main'));\n\n"],"sourceRoot":""}